<?xml version="1.0" encoding="utf-8"?>
<!--
     Build file for the Binary Input/Output Library
     Targets: compila, build, clean, doc
-->

<project  name="Binary-I/O" default="all" basedir=".">

<property name="pkg.prefix" value="mx/unam/fciencias"/>
<property name="pkg.name"   value="binio"/>
<property name="pkg.vers"   value="3.0"/>
<property name="src.base"   value="src"/>
<property name="src.dir"    value="${pkg.name}"/>
<property name="bin.dir"    value="bin"/>
<property name="doc.prefix" value="doc"/>
<property name="html.dir"   value="html"/>
<property name="xml.dir"    value="xml"/>
<property name="script.dir" value="scripts"/>
<property name="test.prefix" value="test"/>
<property name="testsrc.dir" value="src"/>
<property name="testbin.dir" value="bin"/>
<property name="testreport.dir" value="result"/>
<property name="testresult.file" value="TestResult"/>
<property name="testresult.extension" value="txt"/>

<property name="j2sdk.homedir" value="/usr/share/java-oracle/jdk-current"/>
<property name="junit.homedir" value="/usr/share/java-oracle/JUnit"/>

<path id="compile.classpath">
    <pathelement location="${j2sdk.homedir}/lib"/>
    <fileset dir="${j2sdk.homedir}/lib">
       <include name="*.jar"/>
    </fileset>
    <pathelement location="${j2sdk.homedir}/jre/lib"/>
    <fileset dir="${j2sdk.homedir}/jre/lib">
       <include name="*.jar"/>
    </fileset>
    <pathelement location="${src.base}"/>
</path>

<path id="testcompile.classpath">
    <pathelement location="${junit.homedir}"/>
    <fileset dir="${junit.homedir}">
       <include name="*.jar"/>
    </fileset>
    <pathelement location="${bin.dir}"/>
    <fileset dir="${bin.dir}">
       <include name="*.jar"/>
    </fileset>
</path>

<path id="testrun.classpath">
  <fileset dir="${junit.homedir}">
    <include name="*.jar"/>
    <exclude name="*javadoc*.jar"/>
  </fileset>
  <fileset dir="${bin.dir}">
    <include name="*.jar"/>
  </fileset>
  <pathelement location="${src.base}"/>
  <pathelement location="${test.prefix}/${testsrc.dir}"/>
  <pathelement path="${test.prefix}/${testbin.dir}"/>
</path>

<target name="clean"
   description="Elimina respaldos de editor, *.class y directorios bin y doc.">
   <delete failonerror="false" dir="${bin.dir}"/>
   <delete failonerror="false" dir="${doc.prefix}"/>
   <delete failonerror="false" dir="${test.prefix}/${testbin.dir}"/>
   <delete failonerror="false" dir="${test.prefix}/${testreport.dir}"/>
   <delete failonerror="false" file="${test.prefix}/${testresult.file}.${testresult.extension}"/>
</target>

<target name="compile"
   description="Genera archivos *.class.">
   <mkdir dir="${bin.dir}/${pkg.prefix}/${pkg.name}"/>
   <javac
      srcdir="${src.base}/${pkg.prefix}/${src.dir}"
      destdir="${bin.dir}"
      debug="true"
      debuglevel="lines,source"
      includeantruntime="false">
<!--      <compilerarg value="-Xlint:unchecked"/> -->
      <classpath refid="compile.classpath"/>
   </javac>
</target>

<target name="docs"
   description="Genera archivos *.html usando javadoc.">
   <echo message="Source path: ${src.base}/${src.dir}"/>
   <javadoc
      charset="utf-8" docencoding="utf-8"
      nodeprecated="true" nodeprecatedlist="true"
      nohelp="true" version="true" author="true"
      Windowtitle="${pkg.name} ${pkg.vers}"
      destdir="${doc.prefix}/${html.dir}"
      packagenames="*"
      linksource="yes"
      sourcepath="${src.base}">
      <classpath refid="compile.classpath"/>
      <doctitle><![CDATA[<h1>${pkgname} ${pkg.vers}</h1>]]></doctitle>
   </javadoc>
   <echo message="Copying html files"/>
   <copy file="gpl-3.0.html"
         tofile="${doc.prefix}/${html.dir}/gpl-3.0.html"
         overwrite="yes"/>
</target>

<target name="package" depends="compile"
   description="Construye todo el paquete, no genera documentación">
   <jar
      destfile="${bin.dir}/${pkg.name}-${pkg.vers}.jar"
      basedir="${bin.dir}"
      includes="${pkg.prefix}/${pkg.name}/*"/>
</target>
<!--
<target name="testcomp" depends="package"
        description="Compila las pruebas">
   <mkdir dir="${test.prefix}/${testbin.dir}"/>
   <javac
      srcdir="${test.prefix}/${testsrc.dir}"
      destdir="${test.prefix}/${testbin.dir}"
      debug="true"
      debuglevel="lines,source"
      includeantruntime="false">
      <classpath refid="testcompile.classpath"/>
   </javac>
</target>

<target name="test" depends="testcomp"
        description="Ejecuta las pruebas">
  <mkdir dir="${test.prefix}/${testreport.dir}"/>
  <junit fork="no" printsummary="yes" haltonfailure="no">
    <classpath refid="testrun.classpath"/>
    <formatter extension="${testresult.extension}" type="plain"/>
    <batchtest fork="yes" todir="${test.prefix}/${testreport.dir}">
      <fileset dir="${test.prefix}/${testsrc.dir}" includes="*Test.java"/>
    </batchtest>
  </junit>
</target>
-->
<target name="all"     depends="compile, package, docs"
   description="Construye el paquete completo incuyendo documentación."/>
<target name="make"     depends="compile, package"
   description="Construye el paquete completo incuyendo documentación."/>
</project>

